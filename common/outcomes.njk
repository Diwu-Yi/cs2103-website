{% import "se-book-adapted/config.njk" as config with context %}
{% from "common/macros.njk" import  show_stars, show_priority_style with context %}


{% macro get_start_index_untrimmed(filter_property, filter_value, entries) -%}
{% set start = "-1" %}
{% for entry in entries %}
{% if start == "-1" and entry[filter_property] == filter_value %}
  {% set start = loop.index0 %}
  {{ start }}
{% endif %}
{% endfor %}
{%- endmacro %}


{% macro get_start_index(filter_property, filter_value, entries) %}{{ get_start_index_untrimmed(filter_property, filter_value, entries) | trim }}{% endmacro %}


{% macro get_end_index_untrimmed(filter_property, filter_value, start, entries) -%}
{% set end = "-1" %}
{% for entry in entries %}
{% if loop.index0 < start %}
  {# start index not reached, no action required #}
{% elseif not entry[filter_property] %}
  {# filter property not present, no action required #}
{% else %}
  {% if entry[filter_property] == filter_value %}
    {# filter property matched, no action required #}
  {% else %}
    {# filter property value did not match #}
    {% if end == "-1" %}
      {# first time encountering mismatch; this is the target index #}
      {% set end = loop.index0 %}
    {% endif %}
  {% endif %}
{% endif %}
{% endfor %}
{% if end == "-1" %}
  {# no mismatch found until the end of the list #}
  {% set end = entries | length %}
{% endif %}
{{ end }}
{%- endmacro %}


{% macro get_end_index(filter_property, filter_value, start, entries) %}{{get_end_index_untrimmed(filter_property, filter_value, start, entries) | trim }}{% endmacro %}


{% macro apply_to(filter_property, filter_value, entries, op, params={})%}
{% set start = get_start_index(filter_property, filter_value, entries) %}
{% set end = get_end_index(filter_property, filter_value, start, entries) %}
{{ op(entries.slice(start, end), params) }}
{% endmacro %}


{% macro show_evidence(evidence_location_full) %}
{{ dashed_line | safe}}

{{evidence}}

<include src="{{ evidence_location_full }}" />

{% endmacro %}

{% macro show_default_evidence(chapter, unit_location) %}
{% set evidence_location_full =  "../evidence/" + chapter + ".md#" + (unit_location | replace("/", "_")) %}
{{ show_evidence(evidence_location_full)}}
{% endmacro %}


{% macro show_specific_evidence(evidence_location) %}
{% set evidence_location_full =  "../evidence/" + evidence_location %}
{{ show_evidence(evidence_location_full)}}
{% endmacro %}


{% macro show_unit(id_prefix, unit) %}
{% set chapter = unit.location[0] %}
{% set path_as_array = unit.location.slice(1,4) %}
{% set path = path_as_array.join("/") %}
{% set full_path = unit.location.join("/") %}
{% if not unit.priority %}
  {% set priority = config.get_priority(chapter, path_as_array) %}
{% else %}
  {% set priority = unit.priority %}
{% endif %}
<panel type="{{ show_priority_style(priority) }}" expanded no-close >
<span slot="header" class="panel-title"><md>`{{ id_prefix }}` <include src="../../book/{{  full_path }}/text.md#outcomes" inline/> {{ show_stars(priority) }}</md></span>
  <include src="../../book/{{ full_path }}/unit-inElsewhere-asFlat.md" boilerplate />
  {% if unit.omit_evidence %}
    {# no need to show evidence #}
  {% elseif unit.evidence %}
{{ show_specific_evidence(unit.evidence) }}
  {% else %}
{{ show_default_evidence(chapter, path) }}
  {% endif %}
</panel>
{% endmacro %}


{% macro get_unit_priority(unit)%}
{% if unit.priority %}
  {{unit.priority}}
{% elseif unit.location %}
  {% set chapter = unit.location[0] %}
  {% set path_as_array = unit.location.slice(1,4) %}
  {{ config.get_priority(chapter, path_as_array) }}
{% else %}
  {{ 5 }}
{% endif %}
{% endmacro %}

{% macro get_collective_priority(entries)%}
{% set priority = 4 %}
{% for entry in entries %}
  {% set entry_priority = get_unit_priority(entry) | trim | int %}
  {% if (entry_priority) < priority %}
    {% set priority = entry_priority %}
  {% endif %}
{% endfor %}
{{ priority }}
{% endmacro %}


{% macro show_subheading(subheading) %}
<br/>

%%**{{ subheading }}**%%
{% endmacro %}


{% macro show_outcome(entries, params={week_num: "n/a", starting_index: "n/a", outcome: "n/a"}) %}
{% if not params.outcome.priority %}
  {% set priority = get_collective_priority(entries) | trim %}
{% else %}
  {% set priority = params.outcome.priority %}
{% endif %}
{% set  prefix = "W" + params.week_num + "." + params.starting_index%}
{% set letters = "abcdefghijklmnop" | list %}
{% set letter_index = 0 %}
<panel no-close >
<span slot="header" class="panel-title"><md>`{{ prefix | trim }}` **{{ params.outcome.heading }}** {{ show_stars(priority) }}</md> </span>
{% if params.outcome.file %}
  <include src="../evidence/{{ params.outcome.file }}" />
{% else %}
  {% for entry in entries  %}
    {% if entry.location %}
{{ show_unit(prefix + letters[letter_index], entry) }}
      {% set letter_index = letter_index + 1 %}
    {% elseif entry.subheading %}
{{  show_subheading(entry.subheading) }}
    {% endif %}
  {% endfor %}
{% endif %}
</panel>
{% endmacro %}


{% macro show_outcome_group(entries, params={name: "n/a", week_num: "n/a", starting_index: "n/a"}) %}
<span class="activity-desc">{{ params.name }}</span>
<div class="indented">
{% set  outcome_number = params.starting_index | int %}
{% for entry in entries  %}
  {% if entry.heading %}
{{ apply_to("heading", entry.heading, entries, show_outcome, {week_num: params.week_num, starting_index: outcome_number , outcome: entry}) }}
{% set  outcome_number = outcome_number + 1 %}
  {% endif %}
{% endfor %}
</div>
<p/>
{% endmacro %}


{% macro show_week(entries, params={week_num: "n/a"}) %}
{% set i = 1 %}
{% for entry in entries  %}
  {% if entry.name %}
{{ apply_to("name", entry.name, entries, show_outcome_group, {name: entry.name, week_num: params.week_num, starting_index: i}) }}
  {% set i = i + apply_to("name", entry.name, entries, count_outcomes) | trim | int %}
  {% endif %}
{% endfor %}
{% endmacro %}


{% macro count_outcomes(entries, params={})%}
{% set count = 0 %}
{% for entry in entries %}
  {% if entry.heading %}
    {% set count = count + 1 %}
  {% endif %}
{% endfor %}
{{ count }}
{% endmacro %}


{% macro show_week_schedule(week_num, entries) %}
<link rel="stylesheet" href="{{baseUrl}}/css/main.css">
<link rel="stylesheet" href="{{baseUrl}}/css/schedule.css">

<div class="website-content">

## Week {{ week_num }} - Outcomes

<div id="main">

{{ apply_to("week", week_num, entries, show_week, {week_num: week_num}) }}

</div>
</div>

{% endmacro %}


{% set all_outcomes = [
{week: "2"},
  {name: "SE Intro"},
    {heading: "Can explain pros and cons of software engineering"},
      {location: ["softwareEngineering", "introduction", "prosAndCons"]},
  {name: "Implementation"},
    {heading: "Can use basic features of an IDE"},
      {location: ["ides", "introduction", "what"]},
      {location: ["intellij", "projectSetup"]},
      {location: ["intellij", "codeNavigation"]},
    {heading: "Can use Java Collections"},
      {location: ["javaTools", "collections"]},
    {heading: "Can use Java varargs feature"},
      {location: ["javaTools", "varargs"]},
  {name: "Testing"},
    {heading: "Can automate simple regression testing of text UIs"},
      {location: ["testing", "introduction", "what"]},
      {location: ["testing", "testingTypes", "regressionTesting", "what"]},
      {location: ["testing", "testAutomation", "what"], omit_evidence: true},
      {location: ["testing", "testAutomation", "testingTextUis"]},
  {name: "Revision Control"},
    {heading: "Can use Git to save history"},
      {location: ["revisionControl", "what"]},
      {location: ["revisionControl", "repositories"]},
      {location: ["gitAndGithub", "init"]},
      {location: ["revisionControl", "savingHistory"]},
      {location: ["gitAndGithub", "commit"], omit_evidence: true},
      {location: ["gitAndGithub", "ignore"]},
{week: "3"},
  {name: "Refactoring"},
    {heading: "Can refactor code at a basic level"},
      {location: ["refactoring", "what"]},
      {location: ["intellij", "refactoring"]},
      {location: ["refactoring", "how"]},
      {location: ["refactoring", "when"]},
  {name: "Code Quality"},
    {heading: "Can follow a simple style guide"},
      {location: ["codeQuality", "introduction", "basic"], omit_evidence: true},
      {location: ["codeQuality", "followStandard", "introduction"]},
      {location: ["codeQuality", "followStandard", "basic"]},
      {location: ["codeQuality", "followStandard", "intermediate"]},
    {heading: "Can improve code readability"},
      {location: ["codeQuality", "maximiseReadability", "introduction"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "basic", "avoidLongMethods"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "basic", "avoidDeepNesting"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "basic", "avoidComplicatedExpressions"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "basic", "avoidMagicNumbers"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "basic", "makeCodeObvious"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "intermediate", "structureCodeLogically"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "intermediate", "dontTripReader"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "intermediate", "practiceKISSing"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "intermediate", "avoidPrematureOptimizations"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "intermediate", "slapHard"], omit_evidence: true},
      {location: ["codeQuality", "maximiseReadability", "advanced", "makeHappyPathProminent"], omit_evidence: true},
    {heading: "Can use good naming"},
      {location: ["codeQuality", "nameWell", "introduction"], omit_evidence: true},
      {location: ["codeQuality", "nameWell", "basic", "nounsAndVerbsAsNames"], omit_evidence: true},
      {location: ["codeQuality", "nameWell", "basic", "useStandardWords"], omit_evidence: true},
      {location: ["codeQuality", "nameWell", "intermediate", "useNameExplain"], omit_evidence: true},
      {location: ["codeQuality", "nameWell", "intermediate", "notTooLongNorShort"], omit_evidence: true},
      {location: ["codeQuality", "nameWell", "intermediate", "avoidMisleadingNames"], omit_evidence: true},
    {heading: "Can avoid unsafe coding practices"},
      {location: ["codeQuality", "avoidShortcuts", "introduction"], omit_evidence: true},
      {location: ["codeQuality", "avoidShortcuts", "basic", "useDefaultBranch"], omit_evidence: true},
      {location: ["codeQuality", "avoidShortcuts", "basic", "dontRecycleVarsOrParams"], omit_evidence: true},
      {location: ["codeQuality", "avoidShortcuts", "basic", "avoidEmptyCatchBlocks"], omit_evidence: true},
      {location: ["codeQuality", "avoidShortcuts", "basic", "deleteDeadCode"], omit_evidence: true},
      {location: ["codeQuality", "avoidShortcuts", "intermediate", "minimiseVariableScope"], omit_evidence: true},
      {location: ["codeQuality", "avoidShortcuts", "intermediate", "minimiseCodeDuplication"], omit_evidence: true},
    {heading: "Can write good code comments"},
      {location: ["codeQuality", "commentMinimally", "introduction"], omit_evidence: true},
      {location: ["codeQuality", "commentMinimally", "basic", "dontRepeatObvious"], omit_evidence: true},
      {location: ["codeQuality", "commentMinimally", "basic", "writeToReader"], omit_evidence: true},
      {location: ["codeQuality", "commentMinimally", "intermediate", "explainWhatWhyNotHow"], omit_evidence: true},
  {name: "IDEs"},
    {heading: "Can use intermediate level features of an IDE"},
      {location: ["ides", "debugging", "what"], omit_evidence: true},
      {location: ["intellij", "debuggingBasic"]},
      {location: ["intellij", "productivityShortcuts"]},
  {name: "Revision Control"},
    {heading: "Can communicate with a remote repo"},
      {location: ["revisionControl", "remoteRepositories"], omit_evidence: true},
      {location: ["gitAndGithub", "clone"]},
      {location: ["gitAndGithub", "pull"]},
      {location: ["gitAndGithub", "push"]},
    {heading: "Can traverse Git history"},
      {location: ["revisionControl", "usingHistory"], omit_evidence: true},
      {location: ["gitAndGithub", "checkout"]},
      {location: ["gitAndGithub", "tag"]},
      {location: ["gitAndGithub", "stash"]},
  {name: "Other"},
    {heading: "Can work with a 1KLoC code base ==[Compulsory]==", priority: "1", file: "1kloc.md"},
{week: "4"},
  {name: "Design"},
    {heading: "Can explain models"},
      {location: ["modeling", "introduction", "what"], omit_evidence: true},
      {location: ["modeling", "introduction", "how"]},
    {heading: "Can explain OOP"},
      {location: ["oopDesign", "introduction", "what"], omit_evidence: true},
      {location: ["oopDesign", "objects", "basic"]},
      {location: ["oopDesign", "classes", "basic"]},
      {location: ["oopDesign", "objects", "abstraction"], omit_evidence: true},
      {location: ["oopDesign", "objects", "encapsulation"], omit_evidence: true},
    {heading: "Can explain basic object/class structures"},
      {location: ["modeling", "modelingStructures", "ooStructures"], omit_evidence: true},
      {location: ["modeling", "modelingStructures", "classDiagramsBasic"]},
      {location: ["uml", "miscellaneous", "objectVsClassDiagrams"], omit_evidence: true},
  {name: "Implementation"},
    {heading: "Can implement classes"},
      {location: ["oopImplementation", "classes"]},
      {location: ["oopImplementation", "associations"]},
    {heading: "Can do exception handling in code"},
      {location: ["errorHandling", "introduction", "what"], omit_evidence: true},
      {location: ["errorHandling", "exceptions", "what"], omit_evidence: true},
      {location: ["errorHandling", "exceptions", "how"]},
      {location: ["errorHandling", "exceptions", "when"], omit_evidence: true},
    {heading: "Can use Java enumerations"},
      {location: ["oopDesign", "classes", "enumerations"]},
      {location: ["javaTools", "enums"]},
  {name: "Project Management"},
    {heading: "Can create PRs on GitHub"},
      {location: ["revisionControl", "branching"]},
      {location: ["gitAndGithub", "branch"]},
      {location: ["gitAndGithub", "createPRs"]},
      {location: ["gitAndGithub", "mergeConflicts"]},
      {location: ["gitAndGithub", "managePRs"]},
{week: "5"},
  {name: "Design"},
    {heading: "Can use intermediate-level class diagrams"},
      {location: ["uml", "classDiagrams", "dependencies", "what"], omit_evidence: true},
      {location: ["uml", "notes", "notes"], omit_evidence: true},
      {location: ["uml", "notes", "constraints"], omit_evidence: true},
      {location: ["uml", "classDiagrams", "associationsAsAttributes", "what"], omit_evidence: true},
      {location: ["modeling", "modelingStructures", "classDiagramsIntermediate"], omit_evidence: true},
    {heading: "Can explain single responsibility principle"},
      {location: ["principles", "singleResponsibilityPrinciple"]},
  {name: "Implementation"},
    {heading: "Can implement inheritance"},
      {location: ["oopDesign", "inheritance", "what"], omit_evidence: true},
      {location: ["oopImplementation", "inheritance"], omit_evidence: true},
    {heading: "Can implement class-level members"},
      {location: ["oopDesign", "classes", "classLevelMembers"], omit_evidence: true},
      {location: ["oopImplementation", "classLevelMembers"]},
    {heading: "Can implement composition"},
      {location: ["oopDesign", "associations", "composition"], omit_evidence: true},
      {location: ["oopImplementation", "composition"]},
    {heading: "Can implement aggregation"},
      {location: ["oopDesign", "associations", "aggregation"], omit_evidence: true},
      {location: ["oopImplementation", "aggregation"], omit_evidence: true},
    {heading: "Can implement overloading"},
      {location: ["oopDesign", "inheritance", "overloading"], omit_evidence: true},
      {location: ["oopImplementation", "overloading"], omit_evidence: true},
    {heading: "Can make use of a library"},
      {location: ["reuse", "libraries", "what"], omit_evidence: true},
  {name: "Quality Assurance"},
    {heading: "Can use simple JUnit tests"},
      {location: ["testing", "testingTypes", "developerTesting", "what"], omit_evidence: true},
      {location: ["testing", "testingTypes", "developerTesting", "why"]},
      {location: ["testing", "testAutomation", "usingTestDrivers"], omit_evidence: true},
      {location: ["testing", "testAutomation", "tools"], omit_evidence: true},
      {location: ["junit", "basic"]},
  {name: "Project Management"},
    {heading: "Can follow Forking Workflow"},
      {location: ["revisionControl", "forkingWorkflow"], omit_evidence: true},
      {location: ["gitAndGithub", "forkingWorkflow"]},
      {location: ["revisionControl", "drcsVsCrcs"], omit_evidence: true},
      {location: ["revisionControl", "featureBranchFlow"], omit_evidence: true},
      {location: ["revisionControl", "centralizedFlow"], omit_evidence: true},
  {name: "Other"},
    {heading: "Can work with a 2KLoC code base ==[Compulsory]==", priority: "1", file: "2kloc.md"},
{week: "6"},
  {name: "Requirements"},
    {heading: "Can explain requirements"},
      {location: ["requirements", "introduction"], omit_evidence: true},
      {location: ["requirements", "nonFunctionalRequirements"], omit_evidence: true},
      {location: ["requirements", "prioritizing"], omit_evidence: true},
      {location: ["requirements", "quality"], omit_evidence: true},
    {heading: "Can explain some techniques for gathering requirements"},
      {location: ["gatheringRequirements", "brainstorming"], omit_evidence: true},
      {location: ["gatheringRequirements", "productSurveys"], omit_evidence: true},
      {location: ["gatheringRequirements", "observation"], omit_evidence: true},
      {location: ["gatheringRequirements", "userSurveys"], omit_evidence: true},
      {location: ["gatheringRequirements", "interviews"], omit_evidence: true},
      {location: ["gatheringRequirements", "focusGroups"], omit_evidence: true},
      {location: ["gatheringRequirements", "prototyping"], omit_evidence: true},
    {heading: "Can use some techniques for specifying requirements"},
      {subheading: "Prose"},
        {location: ["specifyingRequirements", "prose", "what"], omit_evidence: true},
      {subheading: "Feature Lists"},
        {location: ["specifyingRequirements", "featureList", "what"], omit_evidence: true},
      {subheading: "User Stories"},
        {location: ["specifyingRequirements", "userStories", "introduction"]},
        {location: ["specifyingRequirements", "userStories", "details"], omit_evidence: true},
        {location: ["specifyingRequirements", "userStories", "usage"]},
      {subheading: "Use Cases"},
        {location: ["specifyingRequirements", "useCases", "introduction"], omit_evidence: true},
        {location: ["specifyingRequirements", "useCases", "identifying"], omit_evidence: true},
        {location: ["specifyingRequirements", "useCases", "details"]},
        {location: ["specifyingRequirements", "useCases", "usage"], omit_evidence: true},
      {subheading: "Glossary"},
        {location: ["specifyingRequirements", "glossary", "what"], omit_evidence: true},
      {subheading: "Supplementary Requirements"},
        {location: ["specifyingRequirements", "supplementaryRequirements", "what"], omit_evidence: true},
  {name: "Design"},
    {heading: "Can interpret basic sequence diagrams"},
      {location: ["uml", "sequenceDiagrams", "introduction"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "basic"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "loops"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "objectCreation"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "minimalNotation"], omit_evidence: true},
      {location: ["modeling", "modelingBehaviors", "sequenceDiagramsBasic"]},
  {name: "Implementation"},
    {heading: "Can implement polymorphism"},
      {subheading: "Method Overriding"},
        {location: ["oopDesign", "inheritance", "overriding"], omit_evidence: true},
        {location: ["oopImplementation", "overriding"]},
      {subheading: "Polymorphism"},
        {location: ["oopDesign", "polymorphism", "introduction"], omit_evidence: true},
        {location: ["oopImplementation", "polymorphism"]},
      {subheading: "Abstract Classes"},
        {location: ["oopDesign", "inheritance", "abstractClasses"], omit_evidence: true},
        {location: ["oopImplementation", "abstractClasses"]},
      {subheading: "Interfaces"},
        {location: ["oopDesign", "inheritance", "interfaces"], omit_evidence: true},
        {location: ["oopImplementation", "interfaces"]},
    {heading: "Can use JavaFX to build a simple GUI"},
      {location: ["javaTools", "javaFXBasic"]},
{week: "7"},
  {name: "Requirements"},
    {heading: "Can record requirements of a product", priority: "2", file: "project.md#requirements"},
  {name: "Design"},
    {heading: "Can interpret an architecture diagram"},
      {location: ["design", "introduction", "what"], omit_evidence: true},
      {location: ["architecture", "architectureDiagrams", "reading"], omit_evidence: true},
      {location: ["designApproaches", "multilevelDesign", "what"]},
    {heading: "Can explain APIs"},
      {location: ["reuse", "apis", "what"]},
    {heading: "Can use intermediate-level sequence diagrams"},
      {location: ["uml", "sequenceDiagrams", "objectDeletion"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "selfInvocation"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "alternativePaths"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "optionalPaths"], omit_evidence: true},
      {location: ["uml", "sequenceDiagrams", "referenceFrames"], omit_evidence: true},
      {location: ["modeling", "modelingBehaviors", "sequenceDiagramsIntermediate"]},
      {location: ["uml", "sequenceDiagrams", "parallelPaths"], omit_evidence: true},
  {name: "Implementation"},
    {heading: "Can use logging"},
      {location: ["errorHandling", "logging", "what"], omit_evidence: true},
      {location: ["errorHandling", "logging", "how"]},
    {heading: "Can use assertions"},
      {location: ["errorHandling", "assertions", "what"], omit_evidence: true},
      {location: ["errorHandling", "assertions", "how"]},
      {location: ["errorHandling", "assertions", "when"]},
    {heading: "Can use Java8 streams"},
      {location: ["javaTools", "streamsBasic"]},
  {name: "Project Management"},
    {heading: "Can explain continuous integration and continuous deployment"},
      {location: ["integration", "introduction", "what"], omit_evidence: true},
      {location: ["integration", "buildAutomation", "what"]},
      {location: ["integration", "buildAutomation", "continuousIntegrationDeployment"]},
  {name: "Other"},
    {heading: "Can do local-impact changes to an existing software", priority: "1", file: "project.md#local_impact_changes"},
{week: "8"},
  {name: "Requirements"},
    {heading: "Can apply basic product design guidelines", priority: "3", file: "project.md#product_design"},
    {heading: "Can describe a product from the user's perspective", priority: "3", file: "project.md#user_guide"},
  {name: "Design"},
    {heading: "Can explain architectural styles"},
      {location: ["architecture", "architecturalStyles", "introduction", "what"], omit_evidence: true},
      {location: ["architecture", "architecturalStyles", "nTier", "what"], omit_evidence: true},
      {location: ["architecture", "architecturalStyles", "clientServer", "what"], omit_evidence: true},
      {location: ["architecture", "architecturalStyles", "eventDriven", "what"]},
      {location: ["architecture", "architecturalStyles", "transactionProcessing", "what"], omit_evidence: true},
      {location: ["architecture", "architecturalStyles", "serviceOriented", "what"], omit_evidence: true},
      {location: ["architecture", "architecturalStyles", "more", "moreStyles"], omit_evidence: true},
      {location: ["architecture", "architecturalStyles", "more", "usingStyles"]},
    {heading: "Can use basic software design principles"},
      {subheading: "Abstraction"},
        {location: ["designFundamentals", "abstraction", "what"], omit_evidence: true},
      {subheading: "Coupling"},
        {location: ["designFundamentals", "coupling", "what"]},
        {location: ["designFundamentals", "coupling", "how"]},
        {location: ["designFundamentals", "coupling", "types"]},
      {subheading: "Cohesion"},
        {location: ["designFundamentals", "cohesion", "what"]},
        {location: ["designFundamentals", "cohesion", "how"]},
      {subheading: "SoC and OCP"},
        {location: ["principles", "separationOfConcernsPrinciple"]},
        {location: ["principles", "openClosedPrinciple"]},
  {name: "Implementation"},
    {heading: "Can explain integration approaches"},
      {location: ["integration", "approaches", "lateVsEarly"], omit_evidence: true},
      {location: ["integration", "approaches", "bigBangVsIncremental"], omit_evidence: true},
      {location: ["integration", "approaches", "topDownVsBottomUp"], omit_evidence: true},
    {heading: "Can implement association classes"},
      {location: ["oopDesign", "associations", "associationClasses"]},
      {location: ["oopImplementation", "associationClasses"]},
  {name: "Quality Assurance"},
    {heading: "Can explain different types of testing"},
      {subheading: "Unit Testing"},
        {location: ["testing", "testingTypes", "unitTesting", "what"]},
        {location: ["testing", "testingTypes", "unitTesting", "stubs"]},
        {location: ["testing", "dependencyInjection", "what"], omit_evidence: true},
        {location: ["testing", "dependencyInjection", "how"], omit_evidence: true},
      {subheading: "Integration Testing"},
        {location: ["testing", "testingTypes", "integrationTesting", "what"]},
        {location: ["testing", "testingTypes", "integrationTesting", "how"]},
      {subheading: "System Testing"},
        {location: ["testing", "testingTypes", "systemTesting", "what"]},
        {location: ["testing", "testAutomation", "testingGuis"]},
      {subheading: "Acceptance Testing"},
        {location: ["testing", "testingTypes", "acceptanceTesting", "what"]},
        {location: ["testing", "testingTypes", "acceptanceTesting", "acceptanceVsSystemTesting"]},
      {subheading: "Alpha/Beta Testing"},
        {location: ["testing", "testingTypes", "alphaBetaTesting", "what"]},
  {name: "Other"},
    {heading: "Can do global-impact changes to an existing software", priority: "2", file: "project.md#global_impact_change"},
{week: "9"},
  {name: "Design"},
    {heading: "Can use models to conceptualize an OO solution"},
      {location: ["modeling", "modelingASolution", "introduction"], omit_evidence: true},
      {location: ["modeling", "modelingASolution", "basic"]},
      {location: ["modeling", "modelingASolution", "intermediate"]},
      {location: ["modeling", "modelingStructures", "classDiagramsAdvanced"]},
    {heading: "Can use intermediate-level design principles"},
      {subheading: "How Polymorphism Works"},
        {location: ["oopDesign", "inheritance", "substitutability"], omit_evidence: true},
        {location: ["oopDesign", "inheritance", "dynamicAndStaticBinding"], omit_evidence: true},
        {location: ["oopDesign", "polymorphism", "mechanism"]},
      {subheading: "Design Approaches"},
        {location: ["designApproaches", "topDownBottomUp", "what"], omit_evidence: true},
        {location: ["designApproaches", "agileDesign", "what"], omit_evidence: true},
      {subheading: "More Design Principles"},
        {location: ["principles", "liskovSubstitutionPrinciple"]},
        {location: ["principles", "interfaceSegregationPrinciple"], omit_evidence: true},
        {location: ["principles", "dependencyInversionPrinciple"], omit_evidence: true},
  {name: "Implementation"},
    {heading: "Can use defensive programming"},
      {location: ["errorHandling", "defensiveProgramming", "what"], omit_evidence: true},
      {location: ["errorHandling", "defensiveProgramming", "compulsoryAssociations"], omit_evidence: true},
      {location: ["errorHandling", "defensiveProgramming", "1to1Associations"], omit_evidence: true},
      {location: ["errorHandling", "defensiveProgramming", "referentialIntegrity"], omit_evidence: true},
      {location: ["errorHandling", "defensiveProgramming", "when"], omit_evidence: true},
      {location: ["errorHandling", "designByContract", "what"], omit_evidence: true},
  {name: "Quality Assurance"},
    {heading: "Can use intermediate-level testing techniques"},
      {location: ["testing", "introduction", "testability"], omit_evidence: true},
      {location: ["testing", "testCoverage", "what"]},
      {location: ["testing", "testCoverage", "how"]},
      {location: ["junit", "intermediate"]},
      {location: ["testing", "tdd", "what"], omit_evidence: true},
    {heading: "Can explain some QA techniques complementary to testing"},
      {location: ["qualityAssurance", "introduction", "what"], omit_evidence: true},
      {location: ["qualityAssurance", "introduction", "validationVsVerification"]},
      {location: ["qualityAssurance", "codeReviews", "what"]},
      {location: ["qualityAssurance", "staticAnalysis", "what"]},
      {location: ["qualityAssurance", "formalVerification", "what"], omit_evidence: true},
  {name: "Documentation"},
    {heading: "Can apply best practices when writing developer documents"},
      {subheading: "Type of Developer Docs"},
        {location: ["documentation", "introduction", "what"]},
      {subheading: "Guideline: Aim for Comprehensibility"},
        {location: ["documentation", "guidelines", "aimForComprehensibility", "what"], omit_evidence: true},
        {location: ["documentation", "guidelines", "aimForComprehensibility", "how"]},
      {subheading: "Guideline: Describe Top-Down"},
        {location: ["documentation", "guidelines", "goTopDown", "what"], omit_evidence: true},
        {location: ["documentation", "guidelines", "goTopDown", "why"]},
        {location: ["documentation", "guidelines", "goTopDown", "how"]},
      {subheading: "Guideline: Minimal but Sufficient"},
        {location: ["documentation", "guidelines", "documentMinimally", "what"], omit_evidence: true},
        {location: ["documentation", "guidelines", "documentMinimally", "how"], omit_evidence: true},
      {subheading: "Drawing Architecture Diagrams"},
        {location: ["architecture", "architectureDiagrams", "drawing"], omit_evidence: true},
    {heading: "Can use some common documentation tools"},
      {subheading: "Javadoc"},
        {location: ["documentation", "tools", "javaDoc", "what"], omit_evidence: true},
        {location: ["documentation", "tools", "javaDoc", "how"], omit_evidence: true},
      {subheading: "Markdown"},
        {location: ["documentation", "tools", "markdown", "what"], omit_evidence: true},
        {location: ["documentation", "tools", "markdown", "how"], omit_evidence: true},
      {subheading: "AsciiDoc"},
        {location: ["documentation", "tools", "asciiDoc", "what"], omit_evidence: true},
    {heading: "Can describe the implementation from a developer's perspective", priority: "1", file:"project.md#dev_guide"},
  {name: "Project Management"},
    {heading: "Can use basic scheduling and tracking tools"},
      {location: ["projectPlanning", "milestones"]},
      {location: ["projectPlanning", "buffers"]},
      {location: ["projectPlanning", "issueTrackers"]},
      {location: ["projectPlanning", "workBreakdownStructure"]},
      {location: ["projectPlanning", "ganttCharts"], omit_evidence: true},
      {location: ["projectPlanning", "pertCharts"], omit_evidence: true},
      {location: ["teamwork", "teamStructures"]},
    {heading: "Can use milestones to schedule/track project progress", priority: "1", file: "project.md#track_progress"},
{week: "10"},
  {name: "SE"},
    {heading: "Can explain SE principles"},
      {location: ["principles", "lawOfDemeter"]},
      {location: ["principles", "solidPrinciples"], omit_evidence: true},
      {location: ["principles", "yagniPrinciple"], omit_evidence: true},
      {location: ["principles", "dryPrinciple"], omit_evidence: true},
      {location: ["principles", "brooksLaw"], omit_evidence: true},
  {name: "Requirements"},
    {heading: "Can use activity diagrams"},
      {subheading: "Basic notations"},
        {location: ["modeling", "modelingBehaviors", "activityDiagrams"]},
      {subheading: "Intermediate notations"},
        {location: ["uml", "activityDiagrams", "basicNotations", "rakes"], omit_evidence: true},
        {location: ["uml", "activityDiagrams", "basicNotations", "swimlanes"], omit_evidence: true},
  {name: "Design"},
    {heading: "Can use some basic design patterns"},
      {subheading: "Introduction"},
        {location: ["designPatterns", "introduction", "what"], omit_evidence: true},
        {location: ["designPatterns", "introduction", "format"], omit_evidence: true},
      {subheading: "Singleton pattern"},
        {location: ["designPatterns", "singleton", "what"]},
        {location: ["designPatterns", "singleton", "implementation"]},
        {location: ["designPatterns", "singleton", "evaluation"]},
      {subheading: "Facade pattern"},
        {location: ["designPatterns", "facade", "what"]},
      {subheading: "Command pattern"},
        {location: ["designPatterns", "command", "what"]},
  {name: "Implementation"},
    {heading: "Can get reuse benefits from frameworks, libraries, and platforms"},
      {subheading: "Reuse"},
        {location: ["reuse", "introduction", "what"], omit_evidence: true},
        {location: ["reuse", "introduction", "when"]},
      {subheading: "Libraries"},
        {location: ["reuse", "libraries", "what"]},
        {location: ["reuse", "libraries", "how"]},
      {subheading: "Frameworks"},
        {location: ["reuse", "frameworks", "what"]},
        {location: ["reuse", "frameworks", "frameworksVsLibraries"]},
      {subheading: "Platforms"},
        {location: ["reuse", "platforms", "what"]},
  {name: "Quality Assurance"},
    {heading: "Can explain test case design"},
      {location: ["testCaseDesign", "introduction", "what"]},
      {location: ["testing", "testingTypes", "exploratoryVsScriptedTesting", "what"]},
      {location: ["testing", "testingTypes", "exploratoryVsScriptedTesting", "when"], omit_evidence: true},
      {location: ["testCaseDesign", "introduction", "positiveVsNegative"]},
      {location: ["testCaseDesign", "introduction", "blackVsGlass"]},
      {location: ["testCaseDesign", "more", "testingUseCases"]},
    {heading: "Can use EP for test case design"},
      {location: ["testCaseDesign", "equivalencePartitions", "what"], omit_evidence: true},
      {location: ["testCaseDesign", "equivalencePartitions", "basic"], omit_evidence: true},
      {location: ["testCaseDesign", "equivalencePartitions", "intermediate"]},
    {heading: "Can use Boundary Value Analysis for test case design"},
      {location: ["testCaseDesign", "boundaryValueAnalysis", "what"], omit_evidence: true},
      {location: ["testCaseDesign", "boundaryValueAnalysis", "how"], omit_evidence: true},
    {heading: "Can release a product to end users", priority: "1", file: "project.md#release_product"},
{week: "11"},
  {name: "Requirements"},
    {heading: "Can explain object oriented domain models"},
      {location: ["modeling", "modelingStructures", "objectOrientedDomainModels"], omit_evidence: true},
  {name: "Design"},
    {heading: "Can apply some more design patterns"},
      {location: ["designPatterns", "modelViewController", "what"]},
      {location: ["designPatterns", "observer", "what"]},
      {location: ["designPatterns", "abstractionOccurrence", "what"]},
      {location: ["designPatterns", "more", "otherDesignPatterns"]},
    {heading: "Can optimize the use of design patterns"},
      {location: ["designPatterns", "more", "combiningDesignPatterns"]},
      {location: ["designPatterns", "more", "usingDesignPatterns"]},
      {location: ["designPatterns", "more", "vsPrinciples"], omit_evidence: true},
      {location: ["designPatterns", "more", "otherTypesOfPatterns"]},
  {name: "Quality Assurance"},
    {heading: "Can apply heuristics to combine multiple test inputs"},
      {location: ["testCaseDesign", "combiningTestInputs", "why"], omit_evidence: true},
      {location: ["testCaseDesign", "combiningTestInputs", "combinationStrategies"], omit_evidence: true},
      {location: ["testCaseDesign", "combiningTestInputs", "heuristicValid"], omit_evidence: true},
      {location: ["testCaseDesign", "combiningTestInputs", "heuristicInvalid"], omit_evidence: true},
      {location: ["testCaseDesign", "combiningTestInputs", "mix"]},
    {heading: "Can explain test case design techniques at a higher level"},
      {location: ["testCaseDesign", "summary", "recap"], omit_evidence: true},
    {heading: "Can do acceptance testing", priority: "1", file: "project.md#acceptance_testing"},
  {name: "Project Management"},
    {heading: "Can explain types of SDLC process models"},
      {location: ["processModels", "introduction", "what"], omit_evidence: true},
      {location: ["processModels", "introduction", "sequentialModels"]},
      {location: ["processModels", "introduction", "iterativeModels"]},
      {location: ["processModels", "introduction", "agileModels"]},
    {heading: "Can explain some popular SDLC process models"},
      {location: ["processModels", "exampleProcessModels", "scrum"], evidence: "project.md#relate_process"},
      {location: ["processModels", "exampleProcessModels", "xp"], evidence: "project.md#relate_process"},
      {location: ["processModels", "exampleProcessModels", "unifiedProcess"], evidence: "project.md#relate_process"},
      {location: ["processModels", "more", "cmmi"], omit_evidence: true},
      {location: ["processModels", "summary", "recap"], omit_evidence: true},
{week: "12"},
  {name: "Design"},
    {heading: "Can explain some UML models"},
      {location: ["modeling", "modelingStructures", "deploymentDiagrams"], omit_evidence: true},
      {location: ["modeling", "modelingStructures", "componentDiagrams"], omit_evidence: true},
      {location: ["modeling", "modelingStructures", "packageDiagrams"], omit_evidence: true},
      {location: ["modeling", "modelingStructures", "compositeStructureDiagrams"], omit_evidence: true},
      {location: ["modeling", "modelingBehaviors", "timingDiagrams"], omit_evidence: true},
      {location: ["modeling", "modelingBehaviors", "interactionOverviewDiagrams"], omit_evidence: true},
      {location: ["modeling", "modelingBehaviors", "communicationDiagrams"], omit_evidence: true},
      {location: ["modeling", "modelingBehaviors", "stateMachineDiagrams"], omit_evidence: true},
  {name: "Implementation"},
    {heading: "Can explain cloud computing basics"},
      {location: ["reuse", "cloudComputing", "what"], omit_evidence: true},
      {location: ["reuse", "cloudComputing", "services"], omit_evidence: true},
    {heading: "Can describe contributions to a project", priority: "1", file: "project.md#describe_contribution"},
{week: "13"},
  {name: "Communication"},
    {heading: "Can demo a product", priority: "1", file: "project.md#demo"},
  {name: "Implementation"},
    {heading: "Can work in an existing code base of small/medium size", priority: "2", file: "project.md#brownfield"},
  {name: "Project Management"},
    {heading: "Can deliver a product iteratively", priority: "3", file: "project.md#iterative_delivery"},
    {heading: "Can evaluate contributions from project members", priority: "3", file: "project.md#evaluate_peers"}
]%}


